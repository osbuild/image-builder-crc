stages:
  - start
  - test
  - finish

.terraform:
  after_script:
    - schutzbot/unregister.sh
    - schutzbot/update_github_status.sh update
    - schutzbot/save_journal.sh
  interruptible: true
  retry: 1
  tags:
    - terraform
  artifacts:
    paths:
      - journal-log.gpg
      - container-log.gpg
    when: always

start:
  stage: start
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start

test:
  stage: test
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'
  script:
    - schutzbot/ci_details.sh
    - schutzbot/deploy.sh
    - test/cases/api.sh ${PROVIDER}
  parallel:
    matrix:
      - PROVIDER:
          - aws
        RUNNER:
          - aws/rhel-8.8-ga-x86_64

finish:
  stage: finish
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish
